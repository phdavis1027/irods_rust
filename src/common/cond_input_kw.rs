#[cfg_attr(test, derive(Debug))]
#[derive(PartialEq, Eq)]
pub enum CondInputKw {
    AllKw,
    CopiesKw,
    ExecLocallyKw,
    ForceFlagKw,
    CliInSvrFirewallKw,
    RegChksumKw,
    VerifyChksumKw,
    VerifyBySizeKw,
    ObjPathKw,
    RescNameKw,
    DestRescNameKw,
    DefRescNameKw,
    LeafResourceNameKw,
    DataTypeKw,
    DataSizeKw,
    ChksumKw,
    OrigChksumKw,
    VersionKw,
    FilePathKw,
    BunFilePathKw,
    ReplNumKw,
    WriteFlagKw,
    ReplStatusKw,
    AllReplStatusKw,
    MetadataIncludedKw,
    AclIncludedKw,
    DataIncludedKw,
    DataOwnerKw,
    DataOwnerZoneKw,
    DataExpiryKw,
    DataCommentsKw,
    DataCreateKw,
    DataModifyKw,
    DataAccessKw,
    DataAccessInxKw,
    NoOpenFlagKw,
    PhyopenBySizeKw,
    StreamingKw,
    DataIdKw,
    CollIdKw,
    DataModeKw,
    DataNameKw,
    StatusStringKw,
    DataMapIdKw,
    NoParaOpKw,
    LocalPathKw,
    RsyncModeKw,
    RsyncDestPathKw,
    RsyncChksumKw,
    ChksumAllKw,
    ForceChksumKw,
    CollectionKw,
    AdminKw,
    AdminRmtrashKw,
    UnregKw,
    RmtrashKw,
    RecursiveOprKw,
    CollectionTypeKw,
    CollectionInfo1Kw,
    CollectionInfo2Kw,
    CollectionMtimeKw,
    SelObjTypeKw,
    StructFileOprKw,
    AllMsParamKw,
    UnregCollKw,
    UpdateReplKw,
    RbudpTransferKw,
    VeryVerboseKw,
    RbudpSendRateKw,
    RbudpPackSizeKw,
    ZoneKw,
    RemoteZoneOprKw,
    ReplDataObjInpKw,
    CrossZoneCreateKw,
    VerifyVaultSizeEqualsDatabaseSizeKw,
    QueryByDataIdKw,
    SuClientUserKw,
    RmBunCopyKw,
    KeyWordKw,
    CreateModeKw,
    OpenFlagsKw,
    OffsetKw,
    NumThreadsKw,
    OprTypeKw,
    OpenTypeKw,
    CollFlagsKw,
    TranslatedPathKw,
    NoTranslateLinkptKw,
    BulkOprKw,
    NonBulkOprKw,
    ExecCmdRuleKw,
    ExecMyRuleKw,
    StreamStdoutKw,
    RegReplKw,
    AgeKw,
    DryrunKw,
    NoComputeKw,
    AclCollectionKw,
    NoChkCopyLenKw,
    TicketKw,
    PurgeCacheKw,
    EmptyBundleOnlyKw,
    ReplicaTokenKw,
    RegisterAsIntermediateKw,
    StaleAllIntermediateReplicasKw,
    SourceL1DescKw,
    LockTypeKw,
    LockCmdKw,
    LockFdKw,
    MaxSubFileKw,
    MaxBundleSizeKw,
    NoStagingKw,
    CollNameKw,
    FileUidKw,
    FileOwnerKw,
    FileGidKw,
    FileGroupKw,
    FileModeKw,
    FileCtimeKw,
    FileMtimeKw,
    FileSourcePathKw,
    ExcludeFileKw,
    GetResourceInfoOpTypeKw,
}

impl From<&str> for CondInputKw {
    fn from(s: &str) -> Self {
        match s {
            "all" => Self::AllKw,
            "copies" => Self::CopiesKw,
            "execLocally" => Self::ExecLocallyKw,
            "forceFlag" => Self::ForceFlagKw,
            "cliInSvrFirewall" => Self::CliInSvrFirewallKw,
            "regChksum" => Self::RegChksumKw,
            "verifyChksum" => Self::VerifyChksumKw,
            "verifyBySize" => Self::VerifyBySizeKw,
            "objPath" => Self::ObjPathKw,
            "rescName" => Self::RescNameKw,
            "destRescName" => Self::DestRescNameKw,
            "defRescName" => Self::DefRescNameKw,
            "leafRescName" => Self::LeafResourceNameKw,
            "dataType" => Self::DataTypeKw,
            "dataSize" => Self::DataSizeKw,
            "chksum" => Self::ChksumKw,
            "orig_chksum" => Self::OrigChksumKw,
            "version" => Self::VersionKw,
            "filePath" => Self::FilePathKw,
            "bunFilePath" => Self::BunFilePathKw,
            "replNum" => Self::ReplNumKw,
            "writeFlag" => Self::WriteFlagKw,
            "replStatus" => Self::ReplStatusKw,
            "allReplStatus" => Self::AllReplStatusKw,
            "metadataIncluded" => Self::MetadataIncludedKw,
            "aclIncluded" => Self::AclIncludedKw,
            "dataIncluded" => Self::DataIncludedKw,
            "dataOwner" => Self::DataOwnerKw,
            "dataOwnerZone" => Self::DataOwnerZoneKw,
            "dataExpiry" => Self::DataExpiryKw,
            "dataComments" => Self::DataCommentsKw,
            "dataCreate" => Self::DataCreateKw,
            "dataModify" => Self::DataModifyKw,
            "dataAccess" => Self::DataAccessKw,
            "dataAccessInx" => Self::DataAccessInxKw,
            "noOpenFlag" => Self::NoOpenFlagKw,
            "phyOpenBySize" => Self::PhyopenBySizeKw,
            "streaming" => Self::StreamingKw,
            "dataId" => Self::DataIdKw,
            "collId" => Self::CollIdKw,
            "dataMode" => Self::DataModeKw,
            "data_name" => Self::DataNameKw,
            "statusString" => Self::StatusStringKw,
            "dataMapId" => Self::DataMapIdKw,
            "noParaOpr" => Self::NoParaOpKw,
            "localPath" => Self::LocalPathKw,
            "rsyncMode" => Self::RsyncModeKw,
            "rsyncDestPath" => Self::RsyncDestPathKw,
            "rsyncChksum" => Self::RsyncChksumKw,
            "ChksumAll" => Self::ChksumAllKw,
            "forceChksum" => Self::ForceChksumKw,
            "collection" => Self::CollectionKw,
            "irodsAdmin" => Self::AdminKw,
            "irodsAdminRmTrash" => Self::AdminRmtrashKw,
            "unreg" => Self::UnregKw,
            "irodsRmTrash" => Self::RmtrashKw,
            "recursiveOpr" => Self::RecursiveOprKw,
            "collectionType" => Self::CollectionTypeKw,
            "collectionInfo1" => Self::CollectionInfo1Kw,
            "collectionInfo2" => Self::CollectionInfo2Kw,
            "collectionMtime" => Self::CollectionMtimeKw,
            "selObjType" => Self::SelObjTypeKw,
            "structFileOpr" => Self::StructFileOprKw,
            "allMsParam" => Self::AllMsParamKw,
            "unregColl" => Self::UnregCollKw,
            "updateRepl" => Self::UpdateReplKw,
            "rbudpTransfer" => Self::RbudpTransferKw,
            "veryVerbose" => Self::VeryVerboseKw,
            "rbudpSendRate" => Self::RbudpSendRateKw,
            "rbudpPackSize" => Self::RbudpPackSizeKw,
            "zone" => Self::ZoneKw,
            "remoteZoneOpr" => Self::RemoteZoneOprKw,
            "replDataObjInp" => Self::ReplDataObjInpKw,
            "verifyVaultSizeEqualsDatabaseSize" => Self::VerifyVaultSizeEqualsDatabaseSizeKw,
            "queryByDataID" => Self::QueryByDataIdKw,
            "suClientUser" => Self::SuClientUserKw,
            "rmBunCopy" => Self::RmBunCopyKw,
            "keyWord" => Self::KeyWordKw,
            "createMode" => Self::CreateModeKw,
            "openFlags" => Self::OpenFlagsKw,
            "offset" => Self::OffsetKw,
            "numThreads" => Self::NumThreadsKw,
            "oprType" => Self::OprTypeKw,
            "openType" => Self::OpenTypeKw,
            "collFlags" => Self::CollFlagsKw,
            "translatedPath" => Self::TranslatedPathKw,
            "noTranslateMntpt" => Self::NoTranslateLinkptKw,
            "bulkOpr" => Self::BulkOprKw,
            "nonBulkOpr" => Self::NonBulkOprKw,
            "execCmdRule" => Self::ExecCmdRuleKw,
            "execMyRule" => Self::ExecMyRuleKw,
            "streamStdout" => Self::StreamStdoutKw,
            "regRepl" => Self::RegReplKw,
            "age" => Self::AgeKw,
            "dryrun" => Self::DryrunKw,
            "no_compute" => Self::NoComputeKw,
            "aclCollection" => Self::AclCollectionKw,
            "noChkCopyLen" => Self::NoChkCopyLenKw,
            "ticket" => Self::TicketKw,
            "purgeCache" => Self::PurgeCacheKw,
            "emptyBundleOnly" => Self::EmptyBundleOnlyKw,
            "replicaToken" => Self::ReplicaTokenKw,
            "registerAsIntermediate" => Self::RegisterAsIntermediateKw,
            "staleAllIntermediateReplicas" => Self::StaleAllIntermediateReplicasKw,
            "sourceL1Desc" => Self::SourceL1DescKw,
            "lockType" => Self::LockTypeKw,
            "lockCmd" => Self::LockCmdKw,
            "lockFd" => Self::LockFdKw,
            "maxSubFile" => Self::MaxSubFileKw,
            "maxBunSize" => Self::MaxBundleSizeKw,
            "noStaging" => Self::NoStagingKw,
            "collName" => Self::CollNameKw,
            "fileUid" => Self::FileUidKw,
            "fileOwner" => Self::FileOwnerKw,
            "fileGid" => Self::FileGidKw,
            "fileGroup" => Self::FileGroupKw,
            "fileMode" => Self::FileModeKw,
            "fileCtime" => Self::FileCtimeKw,
            "fileMtime" => Self::FileMtimeKw,
            "fileSourcePath" => Self::FileSourcePathKw,
            "excludeFile" => Self::ExcludeFileKw,
            "getResourceInfoOpType" => Self::GetResourceInfoOpTypeKw,
            _ => panic!("Unknown value: {}", s),
        }
    }
}

impl From<&CondInputKw> for &'static str {
    fn from(kw: &CondInputKw) -> Self {
        match kw {
            CondInputKw::AllKw => "all",
            CondInputKw::CopiesKw => "copies",
            CondInputKw::ExecLocallyKw => "execLocally",
            CondInputKw::ForceFlagKw => "forceFlag",
            CondInputKw::CliInSvrFirewallKw => "cliInSvrFirewall",
            CondInputKw::RegChksumKw => "regChksum",
            CondInputKw::VerifyChksumKw => "verifyChksum",
            CondInputKw::VerifyBySizeKw => "verifyBySize",
            CondInputKw::ObjPathKw => "objPath",
            CondInputKw::RescNameKw => "rescName",
            CondInputKw::DestRescNameKw => "destRescName",
            CondInputKw::DefRescNameKw => "defRescName",
            CondInputKw::LeafResourceNameKw => "leafRescName",
            CondInputKw::DataTypeKw => "dataType",
            CondInputKw::DataSizeKw => "dataSize",
            CondInputKw::ChksumKw => "chksum",
            CondInputKw::OrigChksumKw => "orig_chksum",
            CondInputKw::VersionKw => "version",
            CondInputKw::FilePathKw => "filePath",
            CondInputKw::BunFilePathKw => "bunFilePath",
            CondInputKw::ReplNumKw => "replNum",
            CondInputKw::WriteFlagKw => "writeFlag",
            CondInputKw::ReplStatusKw => "replStatus",
            CondInputKw::AllReplStatusKw => "allReplStatus",
            CondInputKw::MetadataIncludedKw => "metadataIncluded",
            CondInputKw::AclIncludedKw => "aclIncluded",
            CondInputKw::DataIncludedKw => "dataIncluded",
            CondInputKw::DataOwnerKw => "dataOwner",
            CondInputKw::DataOwnerZoneKw => "dataOwnerZone",
            CondInputKw::DataExpiryKw => "dataExpiry",
            CondInputKw::DataCommentsKw => "dataComments",
            CondInputKw::DataCreateKw => "dataCreate",
            CondInputKw::DataModifyKw => "dataModify",
            CondInputKw::DataAccessKw => "dataAccess",
            CondInputKw::DataAccessInxKw => "dataAccessInx",
            CondInputKw::NoOpenFlagKw => "noOpenFlag",
            CondInputKw::PhyopenBySizeKw => "phyOpenBySize",
            CondInputKw::StreamingKw => "streaming",
            CondInputKw::DataIdKw => "dataId",
            CondInputKw::CollIdKw => "collId",
            CondInputKw::DataModeKw => "dataMode",
            CondInputKw::DataNameKw => "data_name",
            CondInputKw::StatusStringKw => "statusString",
            CondInputKw::DataMapIdKw => "dataMapId",
            CondInputKw::NoParaOpKw => "noParaOpr",
            CondInputKw::LocalPathKw => "localPath",
            CondInputKw::RsyncModeKw => "rsyncMode",
            CondInputKw::RsyncDestPathKw => "rsyncDestPath",
            CondInputKw::RsyncChksumKw => "rsyncChksum",
            CondInputKw::ChksumAllKw => "ChksumAll",
            CondInputKw::ForceChksumKw => "forceChksum",
            CondInputKw::CollectionKw => "collection",
            CondInputKw::AdminKw => "irodsAdmin",
            CondInputKw::AdminRmtrashKw => "irodsAdminRmTrash",
            CondInputKw::UnregKw => "unreg",
            CondInputKw::RmtrashKw => "irodsRmTrash",
            CondInputKw::RecursiveOprKw => "recursiveOpr",
            CondInputKw::CollectionTypeKw => "collectionType",
            CondInputKw::CollectionInfo1Kw => "collectionInfo1",
            CondInputKw::CollectionInfo2Kw => "collectionInfo2",
            CondInputKw::CollectionMtimeKw => "collectionMtime",
            CondInputKw::SelObjTypeKw => "selObjType",
            CondInputKw::StructFileOprKw => "structFileOpr",
            CondInputKw::AllMsParamKw => "allMsParam",
            CondInputKw::UnregCollKw => "unregColl",
            CondInputKw::UpdateReplKw => "updateRepl",
            CondInputKw::RbudpTransferKw => "rbudpTransfer",
            CondInputKw::VeryVerboseKw => "veryVerbose",
            CondInputKw::RbudpSendRateKw => "rbudpSendRate",
            CondInputKw::RbudpPackSizeKw => "rbudpPackSize",
            CondInputKw::ZoneKw => "zone",
            CondInputKw::RemoteZoneOprKw => "remoteZoneOpr",
            CondInputKw::ReplDataObjInpKw => "replDataObjInp",
            CondInputKw::CrossZoneCreateKw => "replDataObjInp",
            CondInputKw::VerifyVaultSizeEqualsDatabaseSizeKw => "verifyVaultSizeEqualsDatabaseSize",
            CondInputKw::QueryByDataIdKw => "queryByDataID",
            CondInputKw::SuClientUserKw => "suClientUser",
            CondInputKw::RmBunCopyKw => "rmBunCopy",
            CondInputKw::KeyWordKw => "keyWord",
            CondInputKw::CreateModeKw => "createMode",
            CondInputKw::OpenFlagsKw => "openFlags",
            CondInputKw::OffsetKw => "offset",
            CondInputKw::NumThreadsKw => "numThreads",
            CondInputKw::OprTypeKw => "oprType",
            CondInputKw::OpenTypeKw => "openType",
            CondInputKw::CollFlagsKw => "collFlags",
            CondInputKw::TranslatedPathKw => "translatedPath",
            CondInputKw::NoTranslateLinkptKw => "noTranslateMntpt",
            CondInputKw::BulkOprKw => "bulkOpr",
            CondInputKw::NonBulkOprKw => "nonBulkOpr",
            CondInputKw::ExecCmdRuleKw => "execCmdRule",
            CondInputKw::ExecMyRuleKw => "execMyRule",
            CondInputKw::StreamStdoutKw => "streamStdout",
            CondInputKw::RegReplKw => "regRepl",
            CondInputKw::AgeKw => "age",
            CondInputKw::DryrunKw => "dryrun",
            CondInputKw::NoComputeKw => "no_compute",
            CondInputKw::AclCollectionKw => "aclCollection",
            CondInputKw::NoChkCopyLenKw => "noChkCopyLen",
            CondInputKw::TicketKw => "ticket",
            CondInputKw::PurgeCacheKw => "purgeCache",
            CondInputKw::EmptyBundleOnlyKw => "emptyBundleOnly",
            CondInputKw::ReplicaTokenKw => "replicaToken",
            CondInputKw::RegisterAsIntermediateKw => "registerAsIntermediate",
            CondInputKw::StaleAllIntermediateReplicasKw => "staleAllIntermediateReplicas",
            CondInputKw::SourceL1DescKw => "sourceL1Desc",
            CondInputKw::LockTypeKw => "lockType",
            CondInputKw::LockCmdKw => "lockCmd",
            CondInputKw::LockFdKw => "lockFd",
            CondInputKw::MaxSubFileKw => "maxSubFile",
            CondInputKw::MaxBundleSizeKw => "maxBunSize",
            CondInputKw::NoStagingKw => "noStaging",
            CondInputKw::CollNameKw => "collName",
            CondInputKw::FileUidKw => "fileUid",
            CondInputKw::FileOwnerKw => "fileOwner",
            CondInputKw::FileGidKw => "fileGid",
            CondInputKw::FileGroupKw => "fileGroup",
            CondInputKw::FileModeKw => "fileMode",
            CondInputKw::FileCtimeKw => "fileCtime",
            CondInputKw::FileMtimeKw => "fileMtime",
            CondInputKw::FileSourcePathKw => "fileSourcePath",
            CondInputKw::ExcludeFileKw => "excludeFile",
            CondInputKw::GetResourceInfoOpTypeKw => "getResourceInfoOpType",
        }
    }
}
